import random

def activityNotifications(expenditure, d):
    from bisect import bisect_left, insort

    notificacoes = 0
    janela = sorted(expenditure[:d])

    def mediana():
        meio = d // 2
        if d % 2 == 0:
            return (janela[meio - 1] + janela[meio]) / 2
        else:
            return janela[meio]

    for i in range(d, len(expenditure)):
        if expenditure[i] >= 2 * mediana():
            notificacoes += 1

        # Atualiza a janela
        valor_removido = expenditure[i - d]
        janela.pop(bisect_left(janela, valor_removido))
        insort(janela, expenditure[i])

    return notificacoes

def gerar_dados(n, max_val=200):
    return [random.randint(0, max_val) for _ in range(n)]

def main():
    n, d = map(int, input("Digite n (número de dias) e d (dias para mediana), separados por espaço: ").split())
    print("Digite os gastos diários separados por espaço:")
    gastos = list(map(int, input().split()))
    resultado = activityNotifications(gastos, d)
    print("Notificações:", resultado)

if __name__ == '__main__':
    main()
